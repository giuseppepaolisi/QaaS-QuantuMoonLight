# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master #elenco di rami per cui il push attiva un esecuzione

pool:
  vmImage: ubuntu-latest #pool in cui vengono eseguiti i processi della pipeline

stages:
    - stage: 'BuildStage'
      displayName: 'Build Stage'
    
    - stage: 'Test Stage'
      displayName: 'Test Stage'

    - stage: "DeployStage"
      displayName: "Deploy Stage"
      jobs:
      - deployment: "QuantuMoonLight_deploy"
        displayName: "Deploy Job"
        continueOnError: true
        pool:
            vImage: ubuntu-latest
        environment: qmlDevOps.QuantuMoonLight-VM
        strategy:
            runOnce:
                deploy:
                 steps:
                   - task: UsePythonVersion@0
                     inputs:
                       versionSpec: '3.9'
                     displayName: 'Use Python 3.9'
                   - task: AzureWebApp@1
                     displayName: 'Deploy Azure Web App: QaaS - QuantuMoonLight'
                     inputs:
                       azureSubscription: $(azureServiceConnectionId)
                       appName: 'QaaS-QuantuMoonLight'
                       appType: webAppLinux
                       package: $(System.DefaultWorkingDirectory)/git-projects/QaaS-QuantuMoonLight/
                       deploymentMethod: auto
                       startUpCommand: 'source activate quantumoonlight; flask run -h 0.0.0.0'
                     #steps:
                    #- script: sudo kill -9 $(sudo lsof -t -i:5000)
                    #- script: git pull
                    #- script: source activate quantumoonlight; cd ~; cd git-projects/QaaS-QuantuMoonLight; flask run --host=0.0.0.0
