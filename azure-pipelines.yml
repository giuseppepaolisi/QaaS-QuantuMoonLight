# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master #elenco di rami per cui il push attiva un esecuzione

stages:
#    - stage: 'BuildStage'
#      displayName: 'Build Stage'
    
#    - stage: 'TestStage'
#      displayName: 'Test Stage'

    - stage: "DeployStage"
      displayName: "Deploy Stage"
      jobs:
      - deployment: "QuantuMoonLight_deploy"
        displayName: "Deploy Job"
        continueOnError: true
        pool:
            vImage: qmlDevOps.QuantuMoonLight-VM #pool in cui vengono eseguiti i processi della pipeline
        environment: qmlDevOps.QuantuMoonLight-VM
        strategy:
            runOnce:
             preDeploy:
               steps:
                 - script: |
                    pwd
                    cd ~/git-projects/QaaS-QuantuMoonLight
                    git stash push -u -m "stash effettuato"
                    git pull --rebase
             deploy:
               steps:
                - task: Bash@3
                  inputs:
                    targetType: inline
                    script: |
                      echo "Start..."
                      cd ~/git-projects/QaaS-QuantuMoonLight
                      echo "starting deployment script run"
                      source activate quantumoonlight
                      echo "Ambiente attivato"
                      nohup gunicorn -c gunicorn_config.py app:app &
                      echo "Servizio attivo"
                      sleep 60
             on:
               failure:
                 steps:
                   - script: echo "This is a failure"
               success:
                  steps :
                    - script: echo "Success"
                     #steps:
                    #- script: sudo kill -9 $(sudo lsof -t -i:5000)
                    #- script: git pull
                    #- script: source activate quantumoonlight; cd ~; cd git-projects/QaaS-QuantuMoonLight; flask run --host=0.0.0.0
