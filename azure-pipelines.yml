# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master #elenco di rami per cui il push attiva un esecuzione

pool:
  vmImage: ubuntu-latest #pool in cui vengono eseguiti i processi della pipeline

stages:
#    - stage: 'BuildStage'
#      displayName: 'Build Stage'
    
#    - stage: 'TestStage'
#      displayName: 'Test Stage'

    - stage: "DeployStage"
      displayName: "Deploy Stage"
      jobs:
      - job: Start_VM
        steps:
        - task: AzurePowerShell@5
          inputs:
           azureSubscription: '09592d54-12d2-4bd0-8370-1991aef267b5'
           ScriptType: InlineScript
           Inline: |
             Start-AzVM -ResourceGroupName "QuantuMoonLight-VM_group" -Name "QuantuMoonLight-VM"
             $status = (Get-AzVM -ResourceGroupName "QuantuMoonLight-VM_group" -Name "QuantuMoonLight-VM").PowerState
              if ($status -eq "Running") {
                Write-Host "Virtual machine is running"
              } else {
                Write-Error "Error starting virtual machine"
              }
      - job: Run_Web_App
        dependsOn: Start_VM
        steps:
          - task: AzureCLI@2
            inputs:
              azureSubscription: '09592d54-12d2-4bd0-8370-1991aef267b5'
              scriptType: bash
              inlineScript: 'az vm run-command invoke -g QuantuMoonLight-VM_group -n QuantuMoonLight-VM --command-id RunShellScript --scripts "bash ~/git-projects/run-flask-server.sh"'