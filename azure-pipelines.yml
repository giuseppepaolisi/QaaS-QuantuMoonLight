trigger:
- master 

pool: 'Default'

stages:
- stage: Build
  displayName: 'Build Docker Image'
  jobs:
  - job: Build
    steps:
    - task: Docker@2
      displayName: 'Build Docker Image'
      inputs:
        command: 'build'
        Dockerfile: 'Dockerfile'
        tags: 'latest'
        # nome della connessione ad Azure registry
        containerRegistry: 'quantumoonlight' 
        # nome immagine
        repository: 'quantumoonlight' 
- stage: Test
  dependsOn: Build
  displayName: 'Run Tests'
  jobs:
    - job: TestDockerImage
      displayName: 'Test Docker image'
      steps:
      - task: Bash@3
        displayName: 'Run Docker image'
        inputs:
          targetType: 'inline'
          script: |
            docker run --rm -d -p 5000:5000 --env ENVIRONMENT=Test --name 
            \ quantum_container quantumoonlight.azurecr.io/quantumoonlight
            sleep 10s
      - script: |
          docker exec quantum_container pytest -p no:warnings --junitxml=TEST-result.xml
        displayName: 'Run tests'
        continueOnError: false
      - script: |
          docker stop quantum_container
        displayName: 'Stop Docker container'
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: '**/TEST-result.xml'
          failTaskOnFailedTests: true
- stage: Deploy
  displayName: 'Deploy to Azure'
  dependsOn: Test
  jobs:
  - job: Deploy
    steps:
    - task: Docker@2
      displayName: 'Push Docker Image to registry'
      inputs:
        command: 'push'
        containerRegistry: 'quantumoonlight'
        repository: 'quantumoonlight'
        tags: 'latest'
    - task: AzureWebAppContainer@1
      displayName: 'Deploy dell''immagine Docker sull''Azure Web App'
      inputs:
        appName: 'quantumoon'
        containers: 'quantumoonlight.azurecr.io/quantumoonlight:latest'
        azureSubscription: 'azureSubscription'
        resourceGroupName: 'QuantuMoonLight-VM_group'
